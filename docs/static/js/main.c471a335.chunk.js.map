{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","ReactDOM","render","document","getElementById"],"mappings":"mMAGcA,EAAc,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cAC1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEgB,OAAfJ,GAAqC,KAAdA,IAC1BF,GAAc,SAAAO,GAAU,OAAKL,GAAL,mBAAoBK,OAC5CJ,EAAc,MAKd,SACI,uBACAK,KAAK,OACLC,MAAOP,EACPQ,SAlBiB,SAACL,GAEtBF,EAAcE,EAAEM,OAAOF,a,+BCPjBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACdC,EADc,iDACiCC,UAAUH,GAD3C,+DAEDI,MAAMF,GAFL,cAEdG,EAFc,gBAGEA,EAAKC,OAHP,uBAGbC,EAHa,EAGbA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAYbM,GAZa,4CAAH,sDCERO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEpC,OACI,sBAAKc,UAAU,yCAAf,UACI,4BAAIJ,IAEJ,qBAAMK,IAAKf,EAAKgB,IAAKN,QCHpBO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAGtB,ECHwB,SAACA,GACzB,MAA0BZ,mBAAS,CAC/BmB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAkBA,OAdAC,qBAAU,WACNxB,EAAQC,GACHwB,MAAK,SAAAC,GACFC,YAAW,WACPJ,EAAS,CACLf,KAAMkB,EACNL,SAAS,MAEd,UAEZ,CAACpB,IAIGqB,EDhBmBM,CAAa3B,GAA/BO,EAAR,EAAQA,KAAMa,EAAd,EAAcA,QAUd,OACI,gCACI,oBAAIJ,UAAU,mCAAd,SAAkDhB,IACjDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAGQT,EAAKE,KAAI,SAAAC,GAAG,OACR,cAAC,EAAD,eAEQA,GADCA,EAAIC,aEtBxBiB,EAAe,WACxB,MAAoCxC,mBAAa,CAAC,SAAlD,mBAAOM,EAAP,KAAmBP,EAAnB,KAKA,OACI,qCACI,8CACD,cAAC,EAAD,CAAaA,cAAeA,IAC3B,uBACA,6BAEQO,EAAWe,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEIA,SAAUA,GADLA,Y,MCbjC6B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.c471a335.chunk.js","sourcesContent":["import React, { useState } from\"react\";\r\nimport propTypes from 'prop-types';\r\n\r\n export const AddCategory = ({setCategories})=>{\r\n    const [inputValue, setinputValue] = useState(\"\");\r\n     const handleInputChange=(e)=>{\r\n        //console.log()\r\n        setinputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue !== null && inputValue !==\"\"){\r\n        setCategories(categories => [inputValue, ...categories]);\r\n        setinputValue(\"\")\r\n        }\r\n    }\r\n   \r\n    return(\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange} \r\n            />\r\n        </form>\r\n    ) \r\n\r\n   \r\n }\r\n AddCategory.propTypes={\r\n    setCategories: propTypes.func.isRequired\r\n}","export const  getGifs = async(category)=>{\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&api_key=pUSPYp5K4kR0ipcfce0bPuaSby13OFyb&limit=50`;\r\n    const resp = await fetch(url);\r\n    const {data}  = await resp.json();\r\n\r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n   // console.log(id, title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <p>{title}</p>\r\n            \r\n            <img  src={url} alt={title}/>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n    /* const [images, setImages] = useState([]);\r\n    */\r\n    const { data, loading } = useFetchGifs(category);\r\n\r\n    /*\r\n     useEffect(() => {\r\n         getGifs(category)\r\n             .then( setImages)\r\n     }, [category])*/\r\n    // console.log(gifs);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3 className=\"animate__animated animate__flash\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\">\r\n\r\n                {\r\n                    data.map(img => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n                        />\r\n                    ))\r\n\r\n                }\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\"\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n    useEffect(() => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                setTimeout(() => {\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n                }, 780)\r\n            })\r\n    }, [category])\r\n\r\n\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid'\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n    const [categories, setCategories] = useState(    [\"Ahri\"]\r\n    )\r\n   /* const handleAdd =() =>{\r\n        setCategories([...categories, ]);\r\n    }*/\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n           <AddCategory setCategories={setCategories}/>\r\n            <hr/>\r\n            <ol>\r\n                {\r\n                    categories.map(category =>(\r\n                        <GifGrid \r\n                            key={category}\r\n                            category={category}\r\n                        />\r\n                        //return<li key={category}>{category}</li>\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\n\nReactDOM.render(\n  \n    <GifExpertApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}